@using System
@using DarkDescent.Components
@using Sandbox.UI
@using DarkDescent.UI
@using Sandbox

@namespace DarkDescent.Actor.UI
@attribute [StyleSheet]
@inherits PanelComponent

<root>
	<div class="actor-name">
		<div class="level">
			<label class="overlay">
				@ActorComponent.Level;
			</label>
		</div>
		<label class="name">@DisplayName</label>
	</div>
	@if (ActorComponent is not null)
	{
		<ResourceBar class="gothic-style health-bar" Maximum=@ActorComponent.Stats.MaxHealth Minimum=@(0) Current=@ActorComponent.Health/>
	}
	@*<ResourceBar class="resource-bar stamina-bar" Maximum=@ActorComponent.Stats.MaxStamina Minimum=@(0) Current=@ActorComponent.Stamina />*@
</root>

@code
{
	public GameObject Actor { get; set; }

	private ActorComponent ActorComponent => Actor.GetComponent<ActorComponent>(); 

	private string DisplayName
	{
		get
		{
			if (Actor is null || ActorComponent is null)
				return "";
			
			if (Actor.TryGetComponent<ObjectClassifierComponent>(out var classifier))
			{
				return classifier.DisplayName;
			}
			
			return ActorComponent.GameObject.Name;
		}
	}
	
	//not amazed by this prospect.
	//full rebuild of the HUD every time a stat changes is :s
	protected override int BuildHash()
	{
		if ( ActorComponent is null )
			return 0;

		return HashCode.Combine( ActorComponent.Level, ActorComponent.Stats.MaxHealth, ActorComponent.Health, ActorComponent.Stats.MaxStamina, ActorComponent.Stamina );
	}
}
